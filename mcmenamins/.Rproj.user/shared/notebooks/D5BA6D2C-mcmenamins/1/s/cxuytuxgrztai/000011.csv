"0","#remove and rename columns"
"0","View(data.frame(colnames(tract_social)))"
"0",""
"0","##rename variables"
"0","tract_social = tract_social %>% "
"0","  rename(geog = `Geography`, tract = `Geographic Area Name`, ed_total = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over`, less_than_9 = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Less than 9th grade`, some_hs = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!9th to 12th grade, no diploma`, hs_grad = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!High school graduate (includes equivalency)`, some_college = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Some college, no degree`, associate = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Associate's degree`, bachelors = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree`, grad = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Graduate or professional degree`, hs_higher = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!High school graduate or higher`, bachelors_higher = `Estimate!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree or higher`, vet_status_total = `Estimate!!VETERAN STATUS!!Civilian population 18 years and over`, veteran = `Estimate!!VETERAN STATUS!!Civilian population 18 years and over!!Civilian veterans`, disabled_status_total = `Estimate!!DISABILITY STATUS OF THE CIVILIAN NONINSTITUTIONALIZED POPULATION!!Total Civilian Noninstitutionalized Population`, disabled = `Estimate!!DISABILITY STATUS OF THE CIVILIAN NONINSTITUTIONALIZED POPULATION!!Total Civilian Noninstitutionalized Population!!With a disability`, residence_total = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over`, same_house = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over!!Same house`, same_county = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over!!Different house (in the U.S. or abroad)!!Different house in the U.S.!!Same county`, diff_county = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over!!Different house (in the U.S. or abroad)!!Different house in the U.S.!!Different county!!Same state`, diff_state = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over!!Different house (in the U.S. or abroad)!!Different house in the U.S.!!Different county!!Different state`, abroad = `Estimate!!RESIDENCE 1 YEAR AGO!!Population 1 year and over!!Different house (in the U.S. or abroad)!!Abroad`, place_total = `Estimate!!PLACE OF BIRTH!!Total population`, born_same_state = `Estimate!!PLACE OF BIRTH!!Total population!!Native!!Born in United States!!State of residence`, born_diff_state = `Estimate!!PLACE OF BIRTH!!Total population!!Native!!Born in United States!!Different state`, born_us_other = `Estimate!!PLACE OF BIRTH!!Total population!!Native!!Born in Puerto Rico, U.S. Island areas, or born abroad to American parent(s)`, born_abroad = `Estimate!!PLACE OF BIRTH!!Total population!!Foreign born`, comp_total = `Estimate!!COMPUTERS AND INTERNET USE!!Total households`, with_comp = `Estimate!!COMPUTERS AND INTERNET USE!!Total households!!With a computer`, with_broadband = `Estimate!!COMPUTERS AND INTERNET USE!!Total households!!With a broadband Internet subscription`)"
"0",""
"0","##remove variables"
"0","tract_social = tract_social %>% "
"0","  select(-contains(c(""Margin"", ""Percent""))) %>% "
"0","  select(-c(`NA`)) %>% "
"0","  select(c(geog, state, ed_total, less_than_9, some_hs, hs_grad, some_college, associate, bachelors, grad, hs_higher, bachelors_higher, vet_status_total, veteran, disabled_status_total, disabled, residence_total, same_house, same_county, diff_county, diff_state, abroad, place_total, born_same_state, born_diff_state, born_us_other, born_abroad, comp_total, with_comp, with_broadband))"
"1","[1m[33mError[39m in `select()`:[22m
[33m![39m Can't select columns that don't exist.
[31mâœ–[39m Column `state` doesn't exist.
Backtrace:
[90m 1. [39m... %>% ...
[90m 3. [39m[1m[94mdplyr:::select.data.frame([39m[22m...[1m[94m)[39m[22m
"
