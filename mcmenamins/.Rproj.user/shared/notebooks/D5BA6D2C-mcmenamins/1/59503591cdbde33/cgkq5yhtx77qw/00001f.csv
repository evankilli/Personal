"0","urban_file = 'tl_2023_us_uac20.shp'
urban_shape = read_sf(file.path(paste0(project_dir, ""/Data/Census Shapefiles/tl_2023_us_uac20/"", urban_file)))

#extract or and wa urban areas
urban_shape = urban_shape %>%
  filter(grepl('OR|WA', NAME20)) %>% 
  filter(!grepl('ID', NAME20))

urban_agg = urban_shape %>% 
  st_union() %>% 
  st_cast(""POLYGON"") %>% 
  as.data.frame(urban_shape) %>% 
  mutate(urban = ""urban"") %>% 
  st_sf()

#isolate urban areas with mcmenamins 
urban_mcmen_shape = urban_shape[mcmen_loc, ] %>% 
  st_union() %>% 
  st_cast(""POLYGON"") %>% 
  as.data.frame(urban_shape) %>% 
  mutate(urban_mc_men = ""urban with mcmens"") %>% 
  st_sf()
urban_mcmen = data.frame(urban_mcmen_shape)

#isolate urban areas with no mcmenamins 
urban_no_mcmen_shape = st_sf(urban_shape[is.na(sp::over(as_Spatial(urban_shape), sp::geometry(as_Spatial(mcmen_loc)))),]) %>% 
  st_union() %>% 
  st_cast(""POLYGON"") %>% 
  as.data.frame(urban_shape) %>% 
  mutate(urban_mc_men = ""urban no mcmens"") %>% 
  st_sf()
urban_no_mcmen = data.frame(urban_no_mcmen_shape)


##all urban
###join urban areas to tracts
or_tracts_shape = or_tracts_shape %>% 
  dplyr::mutate(area_km2 = (ALAND + AWATER)/1000000)
urban_or_tracts = or_tracts_shape[urban_agg,]
urban_oregon_split = st_intersection(urban_or_tracts, urban_agg)
"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","wa_tracts_shape = wa_tracts_shape %>% "
"0","  dplyr::mutate(area_km2 = (ALAND + AWATER)/1000000)"
"0","urban_wa_tracts = wa_tracts_shape[urban_agg,]"
"0","urban_wash_split = st_intersection(urban_wa_tracts, urban_agg)"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","split_tracts = bind_rows(urban_oregon_split, urban_wash_split)"
"0",""
"0","##urban areas w mcmenamins"
"0","###join urban areas to tracts"
"0","urban_mcmen_or_tracts = or_tracts_shape[urban_mcmen_shape,]"
"0","urban_mcmen_oregon_split = st_intersection(urban_or_tracts, urban_mcmen_shape)"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","urban_mcmen_wa_tracts = wa_tracts_shape[urban_mcmen_shape,]"
"0","urban_mcmen_wash_split = st_intersection(urban_wa_tracts, urban_mcmen_shape)"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","split_mcmen_tracts = bind_rows(urban_mcmen_oregon_split, urban_mcmen_wash_split)"
"0",""
"0","##urban areas w/out mcmenamins"
"0","###join urban areas to tracts"
"0","urban_no_mcmen_or_tracts = or_tracts_shape[urban_no_mcmen_shape,]"
"0","urban_no_mcmen_oregon_split = st_intersection(urban_or_tracts, urban_no_mcmen_shape)"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","urban_no_mcmen_wa_tracts = wa_tracts_shape[urban_no_mcmen_shape,]"
"0","urban_no_mcmen_wash_split = st_intersection(urban_wa_tracts, urban_no_mcmen_shape)"
"2","Warning:"
"2"," attribute variables are assumed to be spatially constant throughout all geometries
"
"0","split_no_mcmen_tracts = bind_rows(urban_no_mcmen_oregon_split, urban_no_mcmen_wash_split)"
