"0","#remove and rename columns"
"0","View(data.frame(colnames(tract_econ)))"
"0",""
"0","##rename variables"
"0","tract_econ = tract_econ %>% "
"0","  rename(geog = `Geography`, tract = `Geographic Area Name`, commute_total = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over`, commute_drive_alone = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Car, truck, or van -- drove alone`, commute_carpool = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Car, truck, or van -- carpooled`, commute_transit = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Public transportation (excluding taxicab)`, commute_walk = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Walked`, commute_other = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Other means`, commute_wfh = `Estimate!!COMMUTING TO WORK!!Workers 16 years and over!!Worked from home`, inc_ben_total = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households`, earnings = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With earnings`, soc_sec = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With Social Security`, retirement_inc = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With retirement income`, supp_sec = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With Supplemental Security Income`, cash_assist = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With cash public assistance income`, food_stamp = `Estimate!!INCOME AND BENEFITS (IN 2020 INFLATION-ADJUSTED DOLLARS)!!Total households!!With Food Stamp/SNAP benefits in the past 12 months`, insurance_total = `Estimate!!HEALTH INSURANCE COVERAGE!!Civilian noninstitutionalized population`, private_ins = `Estimate!!HEALTH INSURANCE COVERAGE!!Civilian noninstitutionalized population!!With health insurance coverage!!With private health insurance`, public_ins = `Estimate!!HEALTH INSURANCE COVERAGE!!Civilian noninstitutionalized population!!With health insurance coverage!!With public coverage`, no_ins = `Estimate!!HEALTH INSURANCE COVERAGE!!Civilian noninstitutionalized population!!No health insurance coverage`)"
"0",""
"0","##remove variables"
"0","tract_econ = tract_econ %>% "
"0","  dplyr::select(c(geog, tract, commute_total, commute_drive_alone, commute_carpool, commute_transit, commute_walk, commute_other, commute_wfh, inc_ben_total, earnings, soc_sec, retirement_inc, supp_sec, cash_assist, food_stamp, insurance_total, private_ins, public_ins, no_ins))"
"0",""
"0","#convert pop to numeric"
"0","tract_econ = tract_econ %>%"
"0","  convert(num(commute_total)) %>%"
"0","  convert(num(commute_drive_alone)) %>%"
"0","  convert(num(commute_carpool)) %>%"
"0","  convert(num(commute_transit)) %>%"
"0","  convert(num(commute_walk)) %>%"
"0","  convert(num(commute_other)) %>%"
"0","  convert(num(commute_wfh)) %>%"
"0","  convert(num(inc_ben_total)) %>%"
"0","  convert(num(earnings)) %>%"
"0","  convert(num(soc_sec)) %>%"
"0","  convert(num(retirement_inc)) %>%"
"0","  convert(num(supp_sec)) %>%"
"0","  convert(num(cash_assist)) %>%"
"0","  convert(num(food_stamp)) %>%"
"0","  convert(num(insurance_total)) %>%"
"0","  convert(num(private_ins)) %>%"
"0","  convert(num(public_ins)) %>%"
"0","  convert(num(no_ins))"
